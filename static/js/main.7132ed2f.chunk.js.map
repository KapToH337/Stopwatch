{"version":3,"sources":["App.js","index.js"],"names":["App","useState","hour","minute","second","time","setTime","start","setStart","check","setCheck","id","setId","count","setCount","timer","useCallback","work","inter","useEffect","interId","setInterval","findId","className","onClick","clearInterval","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAIaA,EAAM,WACjB,MAAwBC,mBAAS,CAACC,KAAM,EAAGC,OAAQ,EAAGC,OAAQ,IAA9D,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAA0BL,oBAAS,GAAnC,mBAAOM,EAAP,KAAcC,EAAd,KACA,EAA0BP,oBAAS,GAAnC,mBAAOQ,EAAP,KAAcC,EAAd,KAEA,EAAoBT,mBAAS,GAA7B,mBAAOU,EAAP,KAAWC,EAAX,KACA,EAA0BX,mBAAS,GAAnC,mBAAOY,EAAP,KAAcC,EAAd,KAEMC,EAAQC,uBAAY,WAAkB,IAAjBC,IAAgB,yDAmBzC,OAlBKA,IACHZ,EAAKD,QAAU,EACfC,EAAKF,OAAS,EACdE,EAAKH,KAAO,GAGVG,EAAKD,OAAS,GAChBC,EAAKD,SACoB,KAAhBC,EAAKD,SACdC,EAAKD,OAAS,EACdC,EAAKF,UAGa,KAAhBE,EAAKF,SACPE,EAAKF,OAAS,EACdE,EAAKH,QAGA,CAACA,KAAMG,EAAKH,KAAMC,OAAQE,EAAKF,OAAQC,OAAQC,EAAKD,UAC1D,IAEGc,EAAQF,uBAAY,WACpBT,GACFD,EAAQS,OAET,CAACA,EAAOR,IAEXY,qBAAU,WACR,IAAMC,EAAUC,YAAYH,EAAO,KAEnCI,EAAOF,KACN,CAACF,IAEJ,IAAMI,EAAS,SAACX,GACdC,EAAMD,IAGR,OACE,sBAAKY,UAAU,MAAf,UACGlB,EAAKH,KAAO,IAAM,IAAKG,EAAKH,KAD/B,IAEIG,EAAKF,OAAS,IAAM,IAAKE,EAAKF,OAFlC,IAGIE,EAAKD,OAAS,IAAM,IAAKC,EAAKD,OAEhC,uBAEA,wBACEoB,QAAS,WACFjB,GACHC,GAAS,GAEPC,IACFC,GAAS,GACTY,EAAOD,YAAYH,EAAO,QAPhC,mBAcCX,GACC,qCACE,wBACEiB,QAAS,WACPT,GAAM,GACNL,GAAS,GACTJ,EAAQ,CAACJ,KAAM,EAAGC,OAAQ,EAAGC,OAAQ,IACrCqB,cAAcd,IALlB,kBAWA,wBACEa,QAAS,WACPV,EAASD,EAAQ,GACjBH,GAAS,GAETgB,YAAW,WACLb,EAAQ,EACVC,EAAS,GAETW,cAAcd,KAEf,MAXP,kBAiBA,wBACEa,QAAS,WACPT,GAAM,GACNT,EAAQ,CAACJ,KAAM,EAAGC,OAAQ,EAAGC,OAAQ,IAEjCK,IACFC,GAAS,GACTY,EAAOD,YAAYH,EAAO,QAPhC,0BCjGVS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.7132ed2f.chunk.js","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\n\nimport './App.css';\n\nexport const App = () => {\n  const [time, setTime] = useState({hour: 0, minute: 0, second: 0});\n\n  const [start, setStart] = useState(false);\n  const [check, setCheck] = useState(false);\n\n  const [id, setId] = useState(0);\n  const [count, setCount] = useState(0);\n\n  const timer = useCallback((work = true) => {\n    if (!work) {\n      time.second = -1;\n      time.minute = 0;\n      time.hour = 0;\n    }\n\n    if (time.second < 59) {\n      time.second++;\n    } else if (time.second === 59) {\n      time.second = 0;\n      time.minute++;\n    }\n\n    if (time.minute === 60) {\n      time.minute = 0;\n      time.hour ++;\n    }\n\n    return {hour: time.hour, minute: time.minute, second: time.second};\n  }, []);\n\n  const inter = useCallback(() => {\n    if (start) {\n      setTime(timer());\n    }\n  }, [timer, start]);\n\n  useEffect(() => {\n    const interId = setInterval(inter, 1000);\n\n    findId(interId);\n  }, [inter]);\n\n  const findId = (id) => {\n    setId(id);\n  };\n\n  return (\n    <div className=\"App\">\n      {time.hour < 10 && '0'}{time.hour}\n      :{time.minute < 10 && '0'}{time.minute}\n      :{time.second < 10 && '0'}{time.second}\n\n      <br></br>\n\n      <button\n        onClick={() => {\n          if (!start) {\n            setStart(true);\n          }\n          if (check) {\n            setCheck(false);\n            findId(setInterval(inter, 1000));\n          }\n        }}\n      >\n        Start\n      </button>\n\n      {start && (\n        <>\n          <button\n            onClick={() => {\n              timer(false);\n              setCheck(true);\n              setTime({hour: 0, minute: 0, second: 0});\n              clearInterval(id);\n            }}\n          >\n            Stop\n          </button>\n\n          <button\n            onClick={() => {\n              setCount(count + 1);\n              setCheck(true);\n\n              setTimeout(() => {\n                if (count < 1) {\n                  setCount(0)\n                } else {\n                  clearInterval(id);\n                }\n              }, 300)\n            }}\n          >\n            Wait\n          </button>\n\n          <button\n            onClick={() => {\n              timer(false);\n              setTime({hour: 0, minute: 0, second: 0});\n\n              if (check) {\n                setCheck(false);\n                findId(setInterval(inter, 1000));\n              }\n            }}\n          >\n            Reset\n          </button>\n        </>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}